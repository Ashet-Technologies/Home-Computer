CON
  CLK = 300_000_000

  FRONTPORCH_LEN =   450 '  1.5 µs
  HSYNC_LEN      =  1410 '  4.7 µs
  BACKPORCH_LEN  =  1740 '  5.8 µs
  ACTIVE_LEN     = 15600 ' 52.0 µs
  LINE_TIME      = 19200 ' 64.0µs

  VS_FRONTPORCH_LEN = FRONTPORCH_LEN/2
  VS_HSYNC_LEN      = HSYNC_LEN/2
  VS_BACKPORCH_LEN  = BACKPORCH_LEN/2
  VS_ACTIVE_LEN     = ACTIVE_LEN/2

  TOTAL_LINE_COUNT = 625
  IMAGE_LINE_COUNT = 305

  VSYNC_LINE_COUNT = 5 ' 3 * 5

  VIDEO_OUT = 8


  LED0 = 61

  LEVEL_2V0 = 255
  LEVEL_1V0 = 100 * LEVEL_2V0 / 200
  LEVEL_0V3 =  30 * LEVEL_2V0 / 200
  LEVEL_0V0 =   0 * LEVEL_2V0 / 200

  LEVEL_100_DELTA = LEVEL_1V0 - LEVEL_0V3
  LEVEL_B0        = LEVEL_0V3 +   0 * LEVEL_100_DELTA / 100
  LEVEL_B25       = LEVEL_0V3 +  25 * LEVEL_100_DELTA / 100
  LEVEL_B50       = LEVEL_0V3 +  50 * LEVEL_100_DELTA / 100
  LEVEL_B75       = LEVEL_0V3 +  75 * LEVEL_100_DELTA / 100
  LEVEL_B100      = LEVEL_0V3 + 100 * LEVEL_100_DELTA / 100

DAT
  _start
    HUBSET  #$F0
            ' %0000000_E_DDDDDD_MMMMMMMMMM_PPPP_CC_SS
    HUBSET  ##%0000000_1_000000_0000001001_1111_10_00 ' enable crystal+PLL, stay in RCFAST mode
    WAITX   ##20_000_000/100                  ' wait ~10ms for crystal+PLL to stabilize
    ' HUBSET  ##%0000000_1_000000_0000001001_1111_10_11 ' now switch to PLL running at 300.0 MHz
    HUBSET  ##%0000000_1_000000_0000001110_1111_10_11 ' now switch to PLL running at 300.0 MHz

    WAITX   #100

    DIRH #LED0

    '       AAAA_BBBB_FFF_MMMMM_MMMMMMMM_TT_SSSSS_0
    WRPIN ##%0000_0000_000_10111_00000000_01_00000_0, #VIDEO_OUT ' DAC, CogDAC0, 75 Ohm, 2V

    SETDACS #128 ' * 2V / 255 = ~1V

    OUTL #VIDEO_OUT ' Disable ADC
    DIRH #VIDEO_OUT ' Enable DAC


    ' set timeouts
    GETCT ct1_value

  image_loop
    MOV line, #IMAGE_LINE_COUNT

  line_loop
    ' front porch is 0.3V
    ADDCT1 ct1_value, ##FRONTPORCH_LEN
    SETDACS #LEVEL_0V3
    WAITCT1

    ' hsync pulse is 0.0V
    ADDCT1 ct1_value, ##HSYNC_LEN
    SETDACS #LEVEL_0V0
    WAITCT1
    
    ' back porch is 0.3V
    ADDCT1 ct1_value, ##BACKPORCH_LEN
    SETDACS #LEVEL_0V3
    WAITCT1

    ' image body has varying signal
    'ADDCT1 ct1_value, ##ACTIVE_LEN
    'SETDACS #LEVEL_1V0

    ' TODO(fqu): Add image generation logic
    ADDCT1 ct1_value, ##ACTIVE_LEN/3
    SETDACS #LEVEL_B25
    WAITCT1

    ADDCT1 ct1_value, ##ACTIVE_LEN/3
    SETDACS #LEVEL_B50
    WAITCT1

    ADDCT1 ct1_value, ##ACTIVE_LEN/3
    SETDACS #LEVEL_B75
    WAITCT1

    DJNZ line, #line_loop

    ' emit vsync

    ' pre-equalizing pulse
    MOV vsync_lvl_base, #LEVEL_0V3
    MOV vsync_lvl_sync, #LEVEL_0V0
    CALLD PA, #emit_vsync_lines

    ' sync pulse
    MOV vsync_lvl_base, #LEVEL_0V0
    MOV vsync_lvl_sync, #LEVEL_0V3
    CALLD PA, #emit_vsync_lines

    ' post-equalizing pulse
    MOV vsync_lvl_base, #LEVEL_0V3
    MOV vsync_lvl_sync, #LEVEL_0V0
    CALLD PA, #emit_vsync_lines

    JMP #image_loop

  emit_vsync_lines

    MOV line, #VSYNC_LINE_COUNT
  .next_line
' front porch is 0.3V
    
    ADDCT1 ct1_value, ##VS_FRONTPORCH_LEN
    SETDACS vsync_lvl_base
    WAITCT1

    ' hsync pulse is 0.0V
    ADDCT1 ct1_value, ##VS_HSYNC_LEN
    SETDACS vsync_lvl_sync
    WAITCT1
    
    ' back porch + "active" is 0.3V
    ADDCT1 ct1_value, ##VS_BACKPORCH_LEN + VS_ACTIVE_LEN
    SETDACS vsync_lvl_base
    WAITCT1

    DJNZ line, #.next_line
    CALLD PA, PA

  vsync_lvl_base
    LONG 0
  vsync_lvl_sync
    LONG 0

  ct1_value
    LONG 0
  
  line
    LONG 0

  tmp
    LONG 0
